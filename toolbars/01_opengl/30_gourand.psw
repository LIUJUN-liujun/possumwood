{
    "connections": [
        {
            "in_node": "viewport_0",
            "in_port": "in_uniforms",
            "out_node": "float_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "program_0",
            "in_port": "fragment_shader",
            "out_node": "fragment_shader_0",
            "out_port": "shader"
        },
        {
            "in_node": "program_1",
            "in_port": "fragment_shader",
            "out_node": "fragment_shader_1",
            "out_port": "shader"
        },
        {
            "in_node": "draw_0",
            "in_port": "program",
            "out_node": "program_0",
            "out_port": "program"
        },
        {
            "in_node": "draw_1",
            "in_port": "program",
            "out_node": "program_1",
            "out_port": "program"
        },
        {
            "in_node": "float_0",
            "in_port": "value",
            "out_node": "time_0",
            "out_port": "time"
        },
        {
            "in_node": "program_0",
            "in_port": "vertex_shader",
            "out_node": "vertex_shader_0",
            "out_port": "shader"
        },
        {
            "in_node": "program_1",
            "in_port": "vertex_shader",
            "out_node": "vertex_shader_1",
            "out_port": "shader"
        },
        {
            "in_node": "draw_0",
            "in_port": "uniforms",
            "out_node": "viewport_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "draw_1",
            "in_port": "uniforms",
            "out_node": "viewport_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "draw_1",
            "in_port": "vertex_data",
            "out_node": "cgal_0",
            "out_port": "vertex_data"
        },
        {
            "in_node": "transform_1",
            "in_port": "in_mesh",
            "out_node": "loader_0",
            "out_port": "polyhedron"
        },
        {
            "in_node": "draw_0",
            "in_port": "vertex_data",
            "out_node": "cgal_1",
            "out_port": "vertex_data"
        },
        {
            "in_node": "normals_generator_0",
            "in_port": "input",
            "out_node": "loader_1",
            "out_port": "polyhedron"
        },
        {
            "in_node": "transform_0",
            "in_port": "in_mesh",
            "out_node": "normals_generator_0",
            "out_port": "output"
        },
        {
            "in_node": "cgal_1",
            "in_port": "mesh",
            "out_node": "transform_0",
            "out_port": "out_mesh"
        },
        {
            "in_node": "cgal_0",
            "in_port": "mesh",
            "out_node": "transform_1",
            "out_port": "out_mesh"
        }
    ],
    "description": "### Gourand shading\n\n[Gourand shading](https://en.wikipedia.org/wiki/Gouraud_shading) is one of the simplest method of polygonal mesh shading. It computes colour by linearly interpolating vertex colours in screen space, making it cheap but less physically accurate than Phong or physics-based shading methods.\n\nThis demo combines [Gourand shading](https://en.wikipedia.org/wiki/Gouraud_shading) with [Phong reflection](https://en.wikipedia.org/wiki/Phong_reflection_model) model, reproducing an old \"fixed-pipeline\" shading model of OpenGL.",
    "nodes": {
        "cgal_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -278.255981445312,
                    "y": 696.967468261719
                }
            },
            "name": "cgal",
            "type": "render/vertex_data/cgal"
        },
        "cgal_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -136.109573364258,
                    "y": 1433.54443359375
                }
            },
            "name": "cgal",
            "type": "render/vertex_data/cgal"
        },
        "draw_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 444.868072509766,
                    "y": 1152.80627441406
                }
            },
            "name": "draw",
            "type": "render/draw"
        },
        "draw_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 304.455047607422,
                    "y": 649.205627441406
                }
            },
            "name": "draw",
            "type": "render/draw"
        },
        "float_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 430.863555908203,
                    "y": 259.973693847656
                }
            },
            "name": "time",
            "ports": {
                "name": "time"
            },
            "type": "render/uniforms/float"
        },
        "fragment_shader_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 18.5201301574707,
                    "y": 1107.0537109375
                }
            },
            "name": "fragment_shader",
            "ports": {
                "source": "#version 130 \n \nout vec4 result; \n \nin vec3 colour; \n \nvoid main() { \n\tresult = vec4(colour, 1); \n} \n"
            },
            "type": "render/fragment_shader"
        },
        "fragment_shader_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -126.786437988281,
                    "y": 604.204711914062
                }
            },
            "name": "fragment_shader",
            "ports": {
                "source": "#version 130 \n \nout vec4 color; \n \nvoid main() { \n\tcolor = vec4(1); \n} \n"
            },
            "type": "render/fragment_shader"
        },
        "loader_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -287.972686767578,
                    "y": 294.483551025391
                }
            },
            "name": "loader",
            "ports": {
                "filename": "$EXAMPLES/sphere_lowres.obj",
                "name": "mesh"
            },
            "type": "cgal/loader"
        },
        "loader_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -189.439407348633,
                    "y": 924.45068359375
                }
            },
            "name": "loader",
            "ports": {
                "filename": "$EXAMPLES/stanford_models/bunny.obj",
                "name": "mesh"
            },
            "type": "cgal/loader"
        },
        "normals_generator_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -209.007369995117,
                    "y": 1065.48254394531
                }
            },
            "name": "normals_generator",
            "ports": {
                "mode": "Per-vertex normals"
            },
            "type": "cgal/normals_generator"
        },
        "program_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 234.732238769531,
                    "y": 1050.24084472656
                }
            },
            "name": "program",
            "type": "render/program"
        },
        "program_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 83.0709609985352,
                    "y": 556.580017089844
                }
            },
            "name": "program",
            "type": "render/program"
        },
        "time_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 310.933410644531,
                    "y": 314.936553955078
                }
            },
            "name": "time",
            "type": "time"
        },
        "transform_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -155.702438354492,
                    "y": 1217.32067871094
                }
            },
            "name": "transform",
            "ports": {
                "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "scale": {
                    "x": 100.0,
                    "y": 100.0,
                    "z": 100.0
                },
                "translation": {
                    "x": 0.0,
                    "y": -7.0,
                    "z": 0.0
                }
            },
            "type": "cgal/transform"
        },
        "transform_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -280.080535888672,
                    "y": 467.821350097656
                }
            },
            "name": "transform",
            "ports": {
                "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "scale": {
                    "x": 0.100000001490116,
                    "y": 0.100000001490116,
                    "z": 0.100000001490116
                },
                "translation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                }
            },
            "type": "cgal/transform"
        },
        "vertex_shader_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 33.5201301574707,
                    "y": 995.0537109375
                }
            },
            "name": "vertex_shader",
            "ports": {
                "source": "#version 140\n\nout vec3 colour;\n \nin vec3 position;\nin vec3 normals;\n\nuniform mat4 iProjection;\nuniform mat4 iModelView;\nuniform mat4 iModelViewNormal;\n\nuniform float time; \n\n// constant \"colour\" of the surface\nvec3 diffuse_color = vec3(1, 0, 0);\n// \"shininess\" parameter\nfloat alpha = 20.0;\n\nvoid main() {\n\t// light position, as a circular trajectory\n\tvec3 light_pos = vec3(sin(time * 3.14 / 5), 0, cos(time * 3.14 / 5)) * 20.0;\n\t// surface position (scaling down the teapot)\n\tvec3 surface_pos = position * 0.1;\n\n\t// light direction from the surface\n\tvec3 light_vector = normalize(light_pos - surface_pos);\n\t// surface normal (as read from the input file)\n\tvec3 normal = normalize(normals);\n\n\t// lambertial term\n\tcolour = vec3(max(0.0, dot(light_vector, normal))) * diffuse_color;\n\n\t// reflection vector\n\tvec3 reflection = 2.0*dot(light_vector, normal)*normal - light_vector;\n\t// camera position, as the inverse of the scene transformation\n\tvec3 campos = vec3(inverse(iModelView) * vec4(0,0,0,1));\n\t// view vector, determined from the modelview matrix and surface position\n\tvec3 view = normalize(campos + surface_pos);\n\t\n\t// phong reflective term\n\tcolour += pow(max(0.0, dot(reflection, view)), alpha);\n\n\t// perspective projection for rasterisation\n   \tgl_Position = iProjection * iModelView * vec4(surface_pos, 1);\n} \n"
            },
            "type": "render/vertex_shader"
        },
        "vertex_shader_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -111.786437988281,
                    "y": 493.767211914062
                }
            },
            "name": "vertex_shader",
            "ports": {
                "source": "#version 130 \n\nin vec3 position;\n\nuniform mat4 iProjection;\nuniform mat4 iModelView;\n\nuniform float time;\n \nvoid main() {\n\tvec3 light_pos = vec3(sin(time * 3.14 / 5), 0, cos(time * 3.14 / 5)) * 5.0;\n\n\tvec4 pos4 = vec4(position + light_pos, 1);\n   \tgl_Position = iProjection * iModelView * pos4;\n} \n"
            },
            "type": "render/vertex_shader"
        },
        "viewport_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 432.090545654297,
                    "y": 447.971008300781
                }
            },
            "name": "viewport",
            "type": "render/uniforms/viewport"
        }
    },
    "scene_config": {
        "end_time": 5.0,
        "fps": 24.0,
        "start_time": 0.0
    },
    "ui_geometry": "AdnQywADAAAAAAAAAAAAAAAACf8AAAV3AAAAAAAAAAAAAAXlAAAClQAAAAACAAAACgAAAAAAAAAAHAAACf8AAAV3",
    "ui_state": "AAAA/wAAAAD9AAAAAgAAAAAAAAS3AAAEw/wCAAAAAfsAAAAKAGcAcgBhAHAAaAEAAAB6AAAEwwAAAJwBAAADAAAAAQAAAiIAAATD/AIAAAAC+wAAABQAcAByAG8AcABlAHIAdABpAGUAcwEAAAB6AAAB8wAAAHYBAAAD+wAAAAwAZQBkAGkAdABvAHIBAAACbgAAAs8AAACuAQAAAwAAAyUAAATDAAAABAAAAAQAAAAIAAAACPwAAAAA"
}